{"version":3,"file":"static/js/857.064def23.chunk.js","mappings":"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","sources":["hooks/use-input.js","webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","components/comments/Comments.js","webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"sourcesContent":["import { useReducer, useState } from \"react\";\n\nconst useInput = (validateValue) => {\n\n  const [enteredValue, setenteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setenteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setenteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset,\n  };\n};\n\nexport default useInput;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__9cxIN\",\"hr\":\"Comments_hr__-O1bB\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__C3cQf\",\"loading\":\"NewCommentForm_loading__aSq20\",\"control\":\"NewCommentForm_control__iR6jS\",\"actions\":\"NewCommentForm_actions__NC323\",\"invalid\":\"NewCommentForm_invalid__v7AvP\",\"error-text\":\"NewCommentForm_error-text__D+sAF\"};","import { useEffect, useRef, useState } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./NewCommentForm.module.css\";\nimport useInput from \"../../hooks/use-input\";\n\nconst NewCommentForm = (props) => {\n  const {\n    value: commentValue,\n    isValid: enteredCommentIsValid,\n    hasError: commentInputHasError,\n    valueChangeHandler: commentInputChangeHandler,\n    inputBlurHandler: commentInputBlurHandler,\n    reset: resetCommentInput,\n  } = useInput((value) => value.trim() !== \"\");\n\n  let formIsValid = false;\n\n  if (enteredCommentIsValid) {\n    formIsValid = true;\n  }\n\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    if (!formIsValid) {\n      return;\n    }\n\n    // optional: Could validate here\n\n    // send comment to server\n\n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n\n    resetCommentInput();\n  };\n\n  const commentControlClasses = `${classes.control} ${\n    commentInputHasError ? classes.invalid : \"classes.invalid\"\n  }`; \n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={commentControlClasses} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea\n          id=\"comment\"\n          rows=\"5\"\n          onChange={commentInputChangeHandler}\n          onBlur={commentInputBlurHandler}\n          ref={commentTextRef}\n          value={commentValue}\n        ></textarea>\n        {commentInputHasError && <p className=\"error-text\">Please enter a valid comment!</p>}\n      </div>\n      <div className={classes.actions}>\n        <button disabled={!formIsValid} className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__+vwzS\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__UVWAR\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"../comments/CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loadedComments,\n    error,\n  } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (error) {\n    return (\n      <div id=\"notfound\">\n        <div className=\"notfound\">\n          <div className=\"notfound-404\">\n            <h2>Error</h2>\n          </div>\n          <h2>{error}</h2>\n        </div>\n      </div>\n    );\n  }\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = (\n      <div className=\"notfound\">\n        <div className=\"notfound-404\">\n          <h4>No Comments were added yet!</h4>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <section className={classes.comments}>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      <h2>Comments</h2>\n      <hr className={classes.hr} />\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__dE8qA\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  // const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div id=\"notfound\">\n        <div className=\"notfound\">\n          <div className=\"notfound-404\">\n            <h2>Error</h2>\n          </div>\n          <h2>{error}</h2>\n        </div>\n      </div>\n    );\n  }\n\n  if (!loadedQuote.text) {\n    return (\n      <div id=\"notfound\">\n        <div className=\"notfound\">\n          <div className=\"notfound-404\">\n            <h1>404</h1>\n          </div>\n          <h2>Oops! No Quote Found</h2>\n          <p>\n            <Link to=\"/\">Return to homepage</Link>\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </React.Fragment>\n  );\n};\n\nexport default QuoteDetail;\n"],"names":["validateValue","useState","enteredValue","setenteredValue","isTouched","setIsTouched","valueIsValid","value","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","props","useInput","trim","commentValue","enteredCommentIsValid","commentInputHasError","commentInputChangeHandler","commentInputBlurHandler","resetCommentInput","formIsValid","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","preventDefault","enteredText","current","commentData","text","quoteId","commentControlClasses","classes","className","onSubmit","LoadingSpinner","htmlFor","id","rows","onChange","onBlur","ref","disabled","comments","map","comment","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","author","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to","url"],"sourceRoot":""}